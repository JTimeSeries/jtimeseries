<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">


    <bean id="serverMetricInitializer" class="com.od.jtimeseries.server.servermetrics.ServerMetricInitializer">
        <constructor-arg ref="rootContext"/>
        <constructor-arg>
            <list>
                <!-- A list of ServerMetricSource to supply server metric instances -->
                <!-- The following DefaultMetricSource defines some useful server monitoring metrics, but you could add other sources
                or define extra JmxMetric within this source to capture stats from third party processes which support jmx management service,
                for example -->
                <bean id="serverMetrics" class="com.od.jtimeseries.server.servermetrics.DefaultMetricSource">
                    <constructor-arg>
                        <!-- list of the default timeseries-server metrics -->
                        <list>

                            <!-- count of series gc'd, this should happen especially when the server is short of memory -->
                            <bean class="com.od.jtimeseries.server.servermetrics.GarbageCollectedSeriesMetric">
                                <constructor-arg value="${serverMetricsContextPath}"/>
                            </bean>

                            <!-- running count of total series in server -->
                            <bean class="com.od.jtimeseries.server.servermetrics.TotalSeriesMetric">
                                <constructor-arg value="${serverMetricsContextPath}"/>
                                <constructor-arg ref="rootContext"/>
                            </bean>

                            <!-- running count of series for which server is currently receiving updates -->
                            <bean class="com.od.jtimeseries.server.servermetrics.LiveSeriesMetric">
                                <constructor-arg value="${serverMetricsContextPath}"/>
                            </bean>

                            <!-- Count of UDP updates received -->
                            <bean class="com.od.jtimeseries.server.servermetrics.UpdatesReceivedMetric">
                                <constructor-arg value="${serverMetricsContextPath}"/>
                            </bean>

                             <!-- This section defines a group of JMX measurements taken by connecting to the timeseries server's own JMX management service -->
                            <bean class="com.od.jtimeseries.server.servermetrics.jmx.JmxMetric">
                                <constructor-arg>
                                    <bean class="com.od.jtimeseries.util.time.Time" factory-method="seconds">
                                        <constructor-arg value="5"/>  <!-- connect to jmx service to take measurements every 5 mins -->
                                    </bean>
                                </constructor-arg>
                                <constructor-arg value="service:jmx:rmi:///jndi/rmi://localhost:${jmxManagementPort}/jmxrmi"/>
                                <constructor-arg>
                                    <list>
                                        <!-- Read memory Usage -->
                                        <bean class="com.od.jtimeseries.server.servermetrics.jmx.measurement.JmxMeasurements" factory-method="heapMemoryUsage">
                                            <constructor-arg value="${serverMetricsContextPath}"/>
                                        </bean>
                                        <!-- Read CPU percentage -->
                                        <bean class="com.od.jtimeseries.server.servermetrics.jmx.measurement.JmxMeasurements" factory-method="cpuTimePercentage">
                                            <constructor-arg value="${serverMetricsContextPath}"/>
                                        </bean>
                                        <!-- Read Percentage time in GC -->
                                        <bean class="com.od.jtimeseries.server.servermetrics.jmx.measurement.JmxMeasurements" factory-method="gcTimePercentage">
                                            <constructor-arg value="${serverMetricsContextPath}"/>
                                        </bean>
                                        <!-- Read Percentage of Max Memory -->
                                        <bean class="com.od.jtimeseries.server.servermetrics.jmx.measurement.JmxMeasurements" factory-method="heapMemoryPercentageOfMax">
                                            <constructor-arg value="${serverMetricsContextPath}"/>
                                        </bean>
                                    </list>
                                </constructor-arg>
                            </bean>

                        </list>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.od.jtimeseries.server.servermetrics.jmx.DefaultJmxExecutorService">
                <constructor-arg value="${jmxConnectionCountLimit}"/>
                <constructor-arg value="${jmxConnectionMaxAgeMillis}"/>
            </bean>
        </constructor-arg>
    </bean>
	
</beans>
